version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3333:3333"
    env_file:
      - .env.docker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network
    command: sh -c "npm run dev"

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.docker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network
    command: sh -c "node ace migration:run && echo 'Migrações executadas com sucesso'"
    profiles:
      - migration

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=gestao_user
      - POSTGRES_PASSWORD=gestao123
      - POSTGRES_DB=gestao_estoque
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gestao_user -d gestao_estoque"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
