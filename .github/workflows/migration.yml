name: 🗄️ Database Migration

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to migrate"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  migrate:
    name: 🗄️ Run Migrations
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 🗄️ Run migrations
        run: node ace migration:run
        env:
          NODE_ENV: ${{ github.event.inputs.environment }}
          PORT: ${{ secrets.PORT }}
          HOST: ${{ secrets.HOST }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          APP_KEY: ${{ secrets.APP_KEY }}

  test:
    name: 🚦 Run Tests
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 🚦 Run tests
        run: npm run test:ci
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          APP_KEY: ${{ secrets.APP_KEY }}

  coverage:
    name: 📊 Code Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 📊 Run coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          APP_KEY: ${{ secrets.APP_KEY }}

  docker:
    name: 🐳 Docker Tests
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐳 Build and test Docker image
        run: npm run docker:test
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          APP_KEY: ${{ secrets.APP_KEY }}

  ci:
    name: 🚀 CI Pipeline
    runs-on: ubuntu-latest
    needs: [migrate, test, coverage, docker]
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 🚀 Build project
        run: npm run ci:build

      - name: 🚦 Run CI tests
        run: npm run ci:test
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          APP_KEY: ${{ secrets.APP_KEY }}
